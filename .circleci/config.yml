# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12

jobs:
  test:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - run: yarn ci

      - run:
          name: Install JUnit coverage reporter
          command: yarn add --dev jest-junit

      - run:
          name: Run tests with JUnit as reporter
          command: yarn jest --ci --coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - run: yarn add coveralls --dev
      - run:
          name: Add in coverall configuration
          command: 'echo "repo_token: $REPO_TOKEN" > ~/repo/.coveralls.yml'
      - run: yarn jest --coverage --coverageReporters=text-lcov | yarn coveralls

      - store_test_results:
          path: reports

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-

      - persist_to_workspace:
          root: ~/repo
          paths: .
      - run:
          name: Run tests with JUnit as reporter
          command: yarn jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
