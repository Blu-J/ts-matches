{
  "name": "ts-matches",
  "version": "1.2.0",
  "description": "We want to bring in some pattern matching into the typescript land. We want to be able to type guard a whole bunch of conditions and get the type back.",
  "main": "lib/matches.js",
  "types": "lib/matches.d.ts",
  "files": [
    "lib/"
  ],
  "scripts": {
    "build": "tsc",
    "test": "jest",
    "prepublish": "npm run build",
    "mutate": "rm -rf .stryker-tmp/; stryker run; rm -rf .stryker-tmp/"
  },
  "author": "Justin Miller",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^23.3.1",
    "fast-check": "^1.5.0",
    "husky": "^1.0.1",
    "jest": "^23.5.0",
    "jest-junit": "^5.1.0",
    "prettier": "^1.14.2",
    "stryker": "^0.29.2",
    "stryker-api": "^0.21.1",
    "stryker-javascript-mutator": "^0.10.0",
    "stryker-jest-runner": "^1.2.1",
    "stryker-typescript": "^0.14.0",
    "ts-jest": "^23.1.4",
    "typescript": "^3.0.3",
    "stryker-html-reporter": "^0.16.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "yarn prettier --write \"src\\**\\*.(t|j)s(|x)\"",
      "pre-push": "yarn test"
    }
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "/src/.*.spec.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  },
  "dependencies": {
    "fp-ts": "^1.8.0"
  }
}
